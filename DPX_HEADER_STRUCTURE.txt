= DPX header structure description

DPX metadata gets returned as a Depix::DPX object with nested properties.
  
  meta.file.magic # => "SDPX"

== Metadata structure

* <tt>file</tt> a Depix::FileInfo object
  * <tt>magic</tt>  Whether the file is BE - Required
  * <tt>image_offset</tt>  Offset to image data in bytes - Required
  * <tt>version</tt>  Version of header format - Required
  * <tt>file_size</tt>  Total image size in bytes - Required
  * <tt>ditto_key</tt>  Whether headers change through the sequence
  * <tt>generic_size</tt>  Generic header length
  * <tt>industry_size</tt>  Industry header length
  * <tt>user_size</tt>  User header length
  * <tt>filename</tt>  Original filename
  * <tt>timestamp</tt>  Creation 15
  * <tt>creator</tt>  Creator application
  * <tt>roject</tt>  Project name
  * <tt>copyright</tt>  Copyright
  * <tt>encrypt_key</tt>  Encryption key
  * <tt>reserve</tt>  
* <tt>image</tt> a Depix::ImageInfo object
  * <tt>orientation</tt>  Orientation descriptor - Required
  * <tt>number_elements</tt>  How many elements to scan - Required
  * <tt>pixels_per_line</tt>  Pixels per horizontal line - Required
  * <tt>lines_per_element</tt>  Line count - Required
  * <tt>image_elements</tt>  (array , 8 members):
    * <tt>data_sign</tt>  Data sign (0=unsigned, 1=signed). Core is unsigned - Required
    * <tt>low_data</tt>  Reference low data code value
    * <tt>low_quantity</tt>  Reference low quantity represented
    * <tt>high_data</tt>  Reference high data code value (1023 for 10bit per channel)
    * <tt>high_quantity</tt>  Reference high quantity represented
    * <tt>descriptor</tt>  Descirptor for this image element (ie Video or Film), by enum - Required
    * <tt>transfer</tt>  Transfer function (ie Linear), by enum - Required
    * <tt>colorimetric</tt>  Colorimetric (ie YcbCr), by enum - Required
    * <tt>bit_size</tt>  Bit size for element (ie 10) - Required
    * <tt>packing</tt>  Packing (0=Packed into 32-bit words, 1=Filled to 32-bit words)) - Required
    * <tt>encoding</tt>  Encoding (0=None, 1=RLE) - Required
    * <tt>data_offset</tt>  Offset to data for this image element - Required
    * <tt>end_of_line_padding</tt>  End-of-line padding for this image element
    * <tt>end_of_image_padding</tt>  End-of-line padding for this image element
    * <tt>description</tt>  
  * <tt>reserve</tt>  
* <tt>orientation</tt> a Depix::OrientationInfo object
  * <tt>x_offset</tt>  
  * <tt>y_offset</tt>  
  * <tt>x_center</tt>  
  * <tt>y_center</tt>  
  * <tt>x_size</tt>  Original X size
  * <tt>y_size</tt>  Original Y size
  * <tt>filename</tt>  Source image filename
  * <tt>timestamp</tt>  Source image/tape timestamp
  * <tt>device</tt>  Input device or tape
  * <tt>serial</tt>  Input device serial number
  * <tt>border</tt>  (array , 4 members):
  * <tt>aspect_ratio</tt>  (array , 2 members):
  * <tt>reserve</tt>  
* <tt>film</tt> a Depix::FilmInfo object
  * <tt>id</tt>  Film mfg. ID code (2 digits from film edge code)
  * <tt>type</tt>  Film type (2 digits from film edge code)
  * <tt>offset</tt>  Offset in perfs (2 digits from film edge code)
  * <tt>prefix</tt>  Prefix (6 digits from film edge code
  * <tt>count</tt>  Count (4 digits from film edge code)
  * <tt>format</tt>  Format (e.g. Academy)
  * <tt>frame_position</tt>  Frame position in sequence
  * <tt>sequence_extent</tt>  Sequence length
  * <tt>held_count</tt>  For how many frames the frame is held
  * <tt>frame_rate</tt>  Frame rate
  * <tt>shutter_angle</tt>  Shutter angle
  * <tt>frame_id</tt>  Frame identification (keyframe)
  * <tt>slate</tt>  Slate information
  * <tt>reserve</tt>  
* <tt>television</tt> a Depix::TelevisionInfo object
  * <tt>time_code</tt>  Timecode, formatted as HH:MM:SS:FF in the 4 higher bits of each 8bit group
  * <tt>user_bits</tt>  Timecode UBITs
  * <tt>interlace</tt>  Interlace (0 = noninterlaced; 1 = 2:1 interlace
  * <tt>field_number</tt>  Field number
  * <tt>video_signal</tt>  Video signal (by enum)
  * <tt>padding</tt>  Zero (for byte alignment)
  * <tt>horizontal_sample_rate</tt>  Horizontal sampling Hz
  * <tt>vertical_sample_rate</tt>  Vertical sampling Hz
  * <tt>frame_rate</tt>  Frame rate
  * <tt>time_offset</tt>  From sync pulse to first pixel
  * <tt>gamma</tt>  Gamma
  * <tt>black_level</tt>  Black pedestal code value
  * <tt>black_gain</tt>  Black gain code value
  * <tt>break_point</tt>  Break point (?)
  * <tt>white_level</tt>  White level
  * <tt>integration_times</tt>  Integration times (S)
  * <tt>reserve</tt>  
* <tt>user</tt> a Depix::UserInfo object
  * <tt>id</tt>  Name of the user data tag
  * <tt>user_data_ptr</tt>  

